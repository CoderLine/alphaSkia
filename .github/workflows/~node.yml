on:
  workflow_call:
    inputs:
      # Versioning
      is-release-build:
        type: boolean
        description: Whether the version is a prerelease or full release
        required: false

env:
  IS_RELEASE_BUILD: ${{ inputs.is-release-build }}

jobs:
  node:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9'      
    - uses: actions/checkout@v4
    - uses: actions/download-artifact@v4
      with:
        name: nuke
        path: build/bin/Debug/publish/
    - uses: actions/download-artifact@v4
      with:
        path: dist/.organize
    - run: dotnet build/bin/Debug/publish/_build.dll Node
      shell: bash
    - uses: actions/upload-artifact@v4
      with:
        name: nodetars
        path: |
          lib/node/*/*.tgz
  node-test:
    strategy:
      fail-fast: false
      matrix:
        runs-on: [ubuntu-latest, windows-latest, macos-latest]
        node: [latest, "lts/*"]
    runs-on: ${{ matrix.runs-on }}
    needs: [node]
    steps:
    - uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9'      
    - uses: actions/checkout@v4
    - uses: actions/download-artifact@v4
      with:
        name: nuke
        path: build/bin/Debug/publish/
    - uses: actions/download-artifact@v4
      with:
        name: nodetars
        path: dist/.organize/node
    - uses: actions/setup-node@v4
      with:
        node-version:  ${{ matrix.node }}
    - run: dotnet build/bin/Debug/publish/_build.dll NodeTest
      shell: bash
    - id: sanitize-node-version
      if: always()
      run:  echo "NODE_VERSION=${{ matrix.node }}" | sed 's/[*\/]//g' >> "$GITHUB_OUTPUT"
      shell: bash
    - uses: actions/upload-artifact@v4
      if: always()
      with:
        name: nodetest-${{ matrix.runs-on }}-${{ steps.sanitize-node-version.outputs.NODE_VERSION }}
        path: |
          test/test-outputs/**/*.*
