on:
  workflow_call:
    inputs:
      is-release-build:
        type: boolean
        description: Whether the version is a prerelease or full release
        required: false

env:
  IS_RELEASE_BUILD: ${{ inputs.is-release-build }}

jobs:
  dotnet:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9'
    - uses: actions/checkout@v4
    - uses: actions/download-artifact@v4
      with:
        name: nuke
        path: build/bin/Debug/publish/
    - uses: actions/download-artifact@v4
      with:
        path: dist/.organize
    - run: dotnet build/bin/Debug/publish/_build.dll DotNet
    - uses: actions/upload-artifact@v4
      with:
        name: nupkgs
        path: |
          lib/dotnet/**/*.nupkg
  dotnet-test:
    strategy:
      fail-fast: false
      matrix:
        include: 
          - runs-on: ubuntu-latest
            architecture: x64
            framework: net9.0
          - runs-on: macos-latest
            architecture: arm64
            framework: net9.0
          - runs-on: windows-latest
            architecture: x64
            framework: net9.0
          - runs-on: windows-latest
            architecture: x64
            framework: net48
    runs-on: ${{ matrix.runs-on }}
    needs: [dotnet]
    steps:
    - uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9'      
    - uses: actions/checkout@v4
    - uses: actions/download-artifact@v4
      with:
        name: nuke
        path: build/bin/Debug/publish/
    - uses: actions/download-artifact@v4
      with:
        name: nupkgs
        path: dist/.organize/nupkgs
    - run: dotnet build/bin/Debug/publish/_build.dll DotNetTest --architecture ${{ matrix.architecture }} --framework ${{ matrix.framework }}
    - uses: actions/upload-artifact@v4
      if: always()
      with:
        name: dotnettest-${{ matrix.runs-on }}-${{ matrix.architecture }}--${{ matrix.framework  }}
        path: |
          test/test-outputs/**/*.*
