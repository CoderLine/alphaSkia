on:
  workflow_dispatch:
    inputs:
      use-skia-cache:
        type: boolean
        description: Use Skia Binary from cache
        default: 'false'

jobs:
  windows:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        architecture: [x64, x86, arm64]
        variant: ['shared', 'static']
        
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - uses: actions/cache/restore@v3
        if: ${{ inputs.use-skia-cache == 'true' }}
        with:
          path: dist
          key: alphaskia-windows-${{ matrix.architecture }}-${{ matrix.variant }}

      - run: ./build.cmd WindowsSkia --architecture ${{ matrix.architecture }} --variant ${{ matrix.variant }} --use-cache ${{ inputs.use-skia-cache }}
      - uses: actions/upload-artifact@v3
        with:
          name: alphaskia-windows-${{ matrix.architecture }}-${{ matrix.variant }}
          path: artifacts

      - uses: actions/cache/save@v3
        with:
          path: dist
          key: alphaskia-windows-${{ matrix.architecture }}-${{ matrix.variant }}


  windows-jni:
    runs-on: windows-latest
    needs: [windows]
    strategy:
      fail-fast: false
      matrix:
        architecture: [x64, x86, arm64]
        variant: ['shared']

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - uses: actions/download-artifact@v3
        with:
          path: dist
      - run: ./build.cmd WindowsJni --architecture ${{ matrix.architecture }} --variant ${{ matrix.variant }}
      - uses: actions/upload-artifact@v3
        with:
          name: alphaskia-windows-jni-${{ matrix.architecture }}-${{ matrix.variant }}
          path: artifacts

  linux:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        architecture: [x64]
        # TODO architecture: [x64, x86, arm64]
        variant: ['shared', 'static']
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - uses: actions/cache/restore@v3
        if: ${{ inputs.use-skia-cache == 'true' }}
        with:
          path: dist
          key: alphaskia-linux-${{ matrix.architecture }}-${{ matrix.variant }}

      - run: ./externals/skia/tools/install_dependencies.sh
      - run: ./build.sh LinuxSkia --architecture ${{ matrix.architecture }} --variant ${{ matrix.variant }} --use-cache ${{ inputs.use-skia-cache }}
      - uses: actions/upload-artifact@v3
        with:
          name: alphaskia-linux-${{ matrix.architecture }}-${{ matrix.variant }}
          path: artifacts

      - uses: actions/cache/save@v3
        with:
          path: dist
          key: alphaskia-linux-${{ matrix.architecture }}-${{ matrix.variant }}


  linux-jni:
    runs-on: ubuntu-latest
    needs: [linux]
    strategy:
      fail-fast: false
      matrix:
        # TODO architecture: [x64, x86, arm64]
        architecture: [x64]
        variant: ['shared']

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - uses: actions/download-artifact@v3
        with:
          path: dist
      - run: ./build.cmd LinuxJni --architecture ${{ matrix.architecture }} --variant ${{ matrix.variant }}
      - uses: actions/upload-artifact@v3
        with:
          name: alphaskia-linux-jni-${{ matrix.architecture }}-${{ matrix.variant }}
          path: artifacts

  android:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        architecture: [x64, x86, arm, arm64]
        variant: ['shared', 'static']

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - uses: actions/cache/restore@v3
        if: ${{ inputs.use-skia-cache == 'true' }}
        with:
          path: dist
          key: alphaskia-android-${{ matrix.architecture }}-${{ matrix.variant }}

      - run: ./externals/skia/tools/install_dependencies.sh
      - run: ./build.sh AndroidSkia --architecture ${{ matrix.architecture }} --variant ${{ matrix.variant }} --use-cache ${{ inputs.use-skia-cache }}
      - uses: actions/upload-artifact@v3
        with:
          name: alphaskia-android-${{ matrix.architecture }}-${{ matrix.variant }}
          path: artifacts

      - uses: actions/cache/save@v3
        with:
          path: dist
          key: alphaskia-android-${{ matrix.architecture }}-${{ matrix.variant }}


  android-jni:
    runs-on: ubuntu-latest
    needs: [android]
    strategy:
      fail-fast: false
      matrix:
        architecture: [x64, x86, arm, arm64]
        variant: ['shared']

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - uses: actions/download-artifact@v3
        with:
          path: dist
      - run: ./build.cmd AndroidJni --architecture ${{ matrix.architecture }} --variant ${{ matrix.variant }}
      - uses: actions/upload-artifact@v3
        with:
          name: alphaskia-android-jni-${{ matrix.architecture }}-${{ matrix.variant }}
          path: artifacts

  macos:
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        architecture: [x64, arm64]
        variant: ['shared', 'static']
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - uses: actions/cache/restore@v3
        if: ${{ inputs.use-skia-cache == 'true' }}
        with:
          path: dist
          key: alphaskia-macos-${{ matrix.architecture }}-${{ matrix.variant }}

      - run: ./build.sh MacOsSkia --architecture ${{ matrix.architecture }} --variant ${{ matrix.variant }} --use-cache ${{ inputs.use-skia-cache }}
      - uses: actions/upload-artifact@v3
        with:
          name: alphaskia-macos-${{ matrix.architecture }}-${{ matrix.variant }}
          path: artifacts

      - uses: actions/cache/save@v3
        with:
          path: dist
          key: alphaskia-macos-${{ matrix.architecture }}-${{ matrix.variant }}


  macos-jni:
    runs-on: macos-latest
    needs: [macos]
    strategy:
      fail-fast: false
      matrix:
        architecture: [x64, arm64]
        variant: ['shared']

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - uses: actions/download-artifact@v3
        with:
          path: dist
      - run: ./build.cmd MacOsJni --architecture ${{ matrix.architecture }} --variant ${{ matrix.variant }}
      - uses: actions/upload-artifact@v3
        with:
          name: alphaskia-macos-jni-${{ matrix.architecture }}-${{ matrix.variant }}
          path: artifacts

  dotnet:
    runs-on: windows-latest
    needs: [windows, linux, android, macos]
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: false
    - uses: actions/download-artifact@v3
      with:
        path: dist
    - run: ./build.cmd DotNet
    - uses: actions/upload-artifact@v3
      with:
        name: Nupkgs
        path: |
          lib/dotnet/**/bin/Release/*.nupkg
          lib/dotnet/**/bin/Release/*.snupkg

  java:
    runs-on: ubuntu-latest
    needs: [windows-jni, linux-jni, android-jni, macos-jni]
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: false
    - uses: actions/download-artifact@v3
      with:
        path: dist
    - run: ./build.cmd Java
    - uses: actions/upload-artifact@v3
      with:
        name: Jars
        path: |
          lib/java/*/build/libs/*.jar
