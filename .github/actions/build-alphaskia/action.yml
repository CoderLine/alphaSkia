name: 'Build AlphaSkia'
description: 'Builds the AlphaSkia Native library'
inputs: 
  use-cache:
    description: 'Whether to try using the pre-compiled binary from the cache.'
    required: false
    default: 'false'
  architecture:
    description: 'The CPU architecture for which to build the lib'
    required: true
  variant:
    description: 'The library type to build'
    required: true    
  target-os:
    description: 'The target Operating system identifier'
    required: true

runs:
  using: "composite"
  steps:
    - uses: actions/download-artifact@v3
      with:
        path: dist
        name: libskia-${{ inputs.target-os }}-${{ inputs.architecture }}-static

    - id: build-info
      run: |
        if [ ${{ runner.os }} != 'Windows' ]; then
          echo "script=./build.sh" >> "$GITHUB_OUTPUT"
          echo "shell=bash" >> "$GITHUB_OUTPUT"
        else
          echo "script=./build.cmd" >> "$GITHUB_OUTPUT"
          echo "shell=pwsh" >> "$GITHUB_OUTPUT"
        fi
      shell: bash

    - run: ${{ steps.build-info.outputs.script }} LibAlphaSkia --target-os ${{ inputs.target-os }} --architecture ${{ inputs.architecture }} --variant ${{ inputs.variant }}
      shell: ${{ steps.build-info.outputs.shell }}

    - run: ${{ steps.build-info.outputs.script }} LibAlphaSkiaTest --target-os ${{ inputs.target-os }} --architecture ${{ inputs.architecture }} --variant ${{ inputs.variant }}
      shell: ${{ steps.build-info.outputs.shell }}

    - uses: actions/upload-artifact@v3
      if: ${{ always() }}
      with:
        name: libalphaskia-${{ inputs.target-os }}-${{ inputs.architecture }}-${{ inputs.variant }}
        path: artifacts

    - uses: actions/upload-artifact@v3
      if: ${{ always() }}
      with:
        name: libalphaskiatest-${{ inputs.target-os }}-${{ inputs.architecture }}-${{ inputs.variant }}
        if-no-files-found: ignore
        path: |
          dist/libalphaskiatest*/**/*.*        
          test/test-outputs/**/*.*