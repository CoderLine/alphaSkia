name: 'Build Skia'
description: 'Builds the Skia Native library'
inputs: 
  use-cache:
    description: 'Whether to try using the pre-compiled binary from the cache.'
    required: false
    default: 'false'
  architecture:
    description: 'The CPU architecture for which to build the lib'
    required: true
  target-os:
    description: 'The target Operating system identifier'
    required: true

runs:
  using: "composite"
  steps:
    - uses: actions/cache/restore@v3
      if: ${{ inputs.use-cache }}
      with:
        path: dist
        key: alphaskia-${{ inputs.target-os }}-${{ inputs.architecture }}-static-${{ github.run_id }}
        restore-keys: alphaskia-${{ inputs.target-os }}-${{ inputs.architecture }}-static

    - id: build-info
      run: |
        if [ ${{ runner.os }} != 'Windows' ]; then
          echo "script=./build.sh" >> "$GITHUB_OUTPUT"
          echo "shell=bash" >> "$GITHUB_OUTPUT"
        else
          echo "script=./build.cmd" >> "$GITHUB_OUTPUT"
          echo "shell=pwsh" >> "$GITHUB_OUTPUT"
        fi
      shell: bash

    - run: ${{ steps.build-info.outputs.script }} LibSkiaWithCache --target-os ${{ inputs.target-os }} --architecture ${{ inputs.architecture }} --use-cache ${{ inputs.use-cache }}
      shell: ${{ steps.build-info.outputs.shell }}

    - uses: actions/upload-artifact@v3
      with:
        name: skia-${{ inputs.target-os }}-${{ inputs.architecture }}-static
        path: artifacts

    - uses: actions/cache/save@v3
      with:
        path: dist
        key: skia-${{ inputs.target-os }}-${{ inputs.architecture }}-static-${{ github.run_id }} 